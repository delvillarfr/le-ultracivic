"""create allowances table

Revision ID: fadd94301e16
Revises:
Create Date: 2025-07-05 12:36:41.687604

"""
from collections.abc import Sequence
from typing import Union

import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

from alembic import op

# revision identifiers, used by Alembic.
revision: str = "fadd94301e16"
down_revision: Union[str, Sequence[str], None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index(op.f("idx_audit_log_ip_address"), table_name="audit_log")
    op.drop_index(op.f("idx_audit_log_timestamp"), table_name="audit_log")
    op.drop_table("audit_log")
    op.add_column("allowances", sa.Column("created_at", sa.DateTime(), nullable=False))
    op.add_column("allowances", sa.Column("updated_at", sa.DateTime(), nullable=False))
    op.drop_index(op.f("idx_allowances_order_id"), table_name="allowances")
    op.drop_index(op.f("idx_allowances_status"), table_name="allowances")
    op.drop_index(op.f("idx_allowances_timestamp"), table_name="allowances")
    op.create_index(
        op.f("ix_allowances_timestamp"), "allowances", ["timestamp"], unique=False
    )
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index(op.f("ix_allowances_timestamp"), table_name="allowances")
    op.create_index(
        op.f("idx_allowances_timestamp"), "allowances", ["timestamp"], unique=False
    )
    op.create_index(
        op.f("idx_allowances_status"), "allowances", ["status"], unique=False
    )
    op.create_index(
        op.f("idx_allowances_order_id"), "allowances", ["order_id"], unique=False
    )
    op.drop_column("allowances", "updated_at")
    op.drop_column("allowances", "created_at")
    op.create_table(
        "audit_log",
        sa.Column("id", sa.INTEGER(), autoincrement=True, nullable=False),
        sa.Column("ip_address", sa.VARCHAR(), autoincrement=False, nullable=False),
        sa.Column("user_agent", sa.VARCHAR(), autoincrement=False, nullable=False),
        sa.Column(
            "request_body_hash", sa.VARCHAR(), autoincrement=False, nullable=False
        ),
        sa.Column(
            "timestamp", postgresql.TIMESTAMP(), autoincrement=False, nullable=False
        ),
        sa.PrimaryKeyConstraint("id", name=op.f("audit_log_pkey")),
    )
    op.create_index(
        op.f("idx_audit_log_timestamp"), "audit_log", ["timestamp"], unique=False
    )
    op.create_index(
        op.f("idx_audit_log_ip_address"), "audit_log", ["ip_address"], unique=False
    )
    # ### end Alembic commands ###
